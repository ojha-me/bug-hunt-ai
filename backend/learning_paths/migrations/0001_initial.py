# Generated by Django 5.2.6 on 2025-09-30 12:00

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('ai_core', '0004_conversation_conversation_type'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LearningTopic',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text="e.g., 'JavaScript Fundamentals'", max_length=255)),
                ('description', models.TextField(help_text='Detailed description of what this topic covers')),
                ('difficulty_level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced')], default='beginner', max_length=20)),
                ('estimated_duration', models.DurationField(help_text='Expected completion time')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this topic is available for learning')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('prerequisites', models.ManyToManyField(blank=True, help_text='Topics that should be completed before this one', to='learning_paths.learningtopic')),
            ],
            options={
                'ordering': ['difficulty_level', 'name'],
            },
        ),
        migrations.CreateModel(
            name='LearningSubtopic',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text="e.g., 'Variables and Data Types'", max_length=255)),
                ('description', models.TextField(help_text='What this subtopic covers')),
                ('order', models.PositiveIntegerField(help_text='Sequence in the learning path')),
                ('learning_objectives', models.JSONField(default=list, help_text='List of learning goals for this subtopic')),
                ('estimated_duration', models.DurationField(help_text='Expected time to complete this subtopic')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subtopics', to='learning_paths.learningtopic')),
            ],
            options={
                'ordering': ['topic', 'order'],
                'unique_together': {('topic', 'order')},
            },
        ),
        migrations.CreateModel(
            name='UserLearningPath',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('conversation', models.OneToOneField(help_text='The conversation associated with this learning path', on_delete=django.db.models.deletion.CASCADE, to='ai_core.conversation')),
                ('current_subtopic', models.ForeignKey(blank=True, help_text='The subtopic the user is currently working on', null=True, on_delete=django.db.models.deletion.SET_NULL, to='learning_paths.learningsubtopic')),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='learning_paths.learningtopic')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-started_at'],
                'unique_together': {('user', 'topic')},
            },
        ),
        migrations.CreateModel(
            name='SubtopicProgress',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('not_started', 'Not Started'), ('learning', 'Learning'), ('challenging', 'In Challenge Phase'), ('completed', 'Completed'), ('skipped', 'Skipped')], default='not_started', max_length=20)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('challenges_completed', models.PositiveIntegerField(default=0)),
                ('challenges_attempted', models.PositiveIntegerField(default=0)),
                ('notes', models.TextField(blank=True, help_text='User or AI notes about this subtopic')),
                ('subtopic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='learning_paths.learningsubtopic')),
                ('user_path', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress', to='learning_paths.userlearningpath')),
            ],
            options={
                'ordering': ['subtopic__order'],
                'unique_together': {('user_path', 'subtopic')},
            },
        ),
    ]
